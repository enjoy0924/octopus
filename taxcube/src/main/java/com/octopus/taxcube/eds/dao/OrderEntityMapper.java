package com.octopus.taxcube.eds.dao;

import com.octopus.taxcube.eds.entity.OrderEntity;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface OrderEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated Thu Jan 24 14:28:59 CST 2019
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated Thu Jan 24 14:28:59 CST 2019
     */
    int insert(OrderEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated Thu Jan 24 14:28:59 CST 2019
     */
    int insertSelective(OrderEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated Thu Jan 24 14:28:59 CST 2019
     */
    OrderEntity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated Thu Jan 24 14:28:59 CST 2019
     */
    int updateByPrimaryKeySelective(OrderEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated Thu Jan 24 14:28:59 CST 2019
     */
    int updateByPrimaryKey(OrderEntity record);

    List<OrderEntity> selectByCustomerId(Long customerId);

    List<OrderEntity> selectAll();

    List<OrderEntity> selectByStatus(String status);

    List<OrderEntity> selectQuotationOrders();

    List<OrderEntity> selectQuotationOrdersByQuotationStatus(@Param("quotationStatus") String status);

    List<OrderEntity> selectPaymentOrders();

    List<OrderEntity> selectPaymentOrdersByPayStatus(@Param("payStatus") String status);

    List<OrderEntity> selectDistributionOrders();

    List<OrderEntity> selectDistributionOrdersByDistributeStatus(@Param("distributeStatus") String status);

    List<OrderEntity> selectServeOrders();

    List<OrderEntity> selectServeOrdersByServeStatus(@Param("serveStatus") String status);

    List<OrderEntity> selectCheckOrders();

    List<OrderEntity> selectCheckOrdersByCheckStatus(@Param("checkStatus") String status);

    List<OrderEntity> selectAllByCustomerId(Long customerId);

    List<OrderEntity> selectByCustomerIdAndStatus(Long customerId, String status);

    List<OrderEntity> selectAllByEmpId(Long employeeId);

    List<OrderEntity> selectByEmpIdAndStatus(Long employeeId, String status);

    List<OrderEntity> selectByEmpIdAndOrderStatus(@Param("empId") Long empId, @Param("orderStatus") String orderStatus);

    List<OrderEntity> selectByEmpIdAndServeStatus(@Param("empId") Long empId, @Param("serveStatus") String serveStatus);
}